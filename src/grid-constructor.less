// Grid column constructor
.grid-constructor(@n, @selector, @padding: 0) {

  // Extra small devices (portrait phones, less than 34em)
  @break-xs: 1px;
  // Small devices (landscape phones, 34em and up)
  @break-sm: 34em;
  // Medium devices (tablets, 48em and up)
  @break-md: 48em;
  // Large devices (desktops, 62em and up)
  @break-lg: 62em;
  // Extra large devices (large desktops, 75em and up)
  @break-xl: 75em;

  // List of breakpoints
  @breakpoints: @break-xs, @break-sm, @break-md, @break-lg, @break-xl;
  // List of suffixes
  @suffixes: xs, sm, md, lg, xl;

  .grid-overloop(@suffix, @breakpoint) {

    @media (min-width: @breakpoint) {
      .grid-loop(@n, @selector, @padding, @i: 1) when (@i =< @n) {

        .@{selector}-@{suffix}-@{i} {
          padding: 0 @padding;
          width: (@i * 100% / @n);
        }

        .grid-loop(@n, @selector, @padding, (@i + 1));
      }

      .grid-loop(@n, @selector, @padding);
    }
  }


  .grid-gdd(@n, @suffixes, @breakpoints, @i: 1) when (@i =< @n) {

    @suffix: extract(@suffixes, @i);
    @breakpoint: extract(@breakpoints, @i);

    .grid-overloop(@suffix, @breakpoint);

    .grid-gdd(@n, @suffixes, @breakpoints, (@i + 1));
  }

  .grid-gdd(5, @suffixes, @breakpoints);
}
